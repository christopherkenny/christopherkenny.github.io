---
title: "Software"
description: "R Packages"
date: today
listing:
  - id: packages
    template: webscripts/software.ejs
    contents: webscripts/pkgs.yml
page-layout: full
---

```{r setup, include=FALSE, eval = FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(gt)

# helpers ----
make_url <- function(x, y) {
  paste0('<a href="', pkgs |> filter(logo %in% x) |> slice(match(logo, x)) |> pull(link), '">', y, '</a>')
}

fmt_software_table <- function(tb, .id = NULL) {
  tb |> 
    mutate(
      info = paste0(name, ': ', info),
      info = ifelse(is.na(coauthors), info, paste0(info, ' (with ', coauthors, ')'))
    ) |> 
    select(logo, info) |> 
    gt(id = .id) |> 
    text_transform(
      locations = cells_body(columns = logo),
      fn = function(x) {
        make_url(x,
                 local_image(
                   filename = x,
                   height = '100px; object-fit: contain; width: 125px'
                 )
        )
      }
    ) |>
    tab_options(
      column_labels.hidden = TRUE
    ) |> 
    cols_width(
      logo ~ px(125)
    ) |> 
    tab_style(
      style = cell_text(weight = 'bold'),
      locations = cells_body(columns = info)
    )
}

# read data ----
pkgs <- read_csv('pkgs.csv') |> 
  mutate(
    logo = paste0('hexes/hex_', name, '.png'),
    .after = name
  )

if (FALSE) {
  downloads <- pkgs |>
    filter(status == 'CRAN') |>  
    pull(name) |>
    cranlogs::cran_downloads(from = '2015-05-18') |> 
    as_tibble()
  counts <- downloads |>
    group_by(package) |>
    summarize(count = sum(count)) |>
    rename(name = package)
  
  downloads |> 
    rename(name = package) |> 
    left_join(pkgs, by = 'name') |> 
    filter(date >= date('2024-01-01')) |> 
    group_by(name) |> 
    arrange(date) |> 
    mutate(
      cumulative_count = cumsum(count),
      pkg_max = max(cumulative_count),
      noise = rnorm(1, 0, 0.1)
    ) |> 
    ungroup() |> 
    mutate(
      ratio = pmin(pmax(pkg_max / max(pkg_max), 0.3), 0.95) + noise
    ) |> 
    filter(cumulative_count > 0) |>
    ggplot() +
    geomtextpath::geom_textpath(
      aes(x = date, y = cumulative_count, label = name, color = color, hjust = ratio)
    ) + 
    scale_x_date(name = 'Date', date_breaks = '1 month', date_labels = '%b %Y') +
    scale_y_continuous(name = 'Count', labels = scales::label_comma(), breaks = seq(0, 6000, by = 1000)) +
    scale_color_identity() +
    theme_bw()
}
```

::: {#packages}
:::
