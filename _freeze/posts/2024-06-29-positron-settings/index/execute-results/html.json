{
  "hash": "267f1f5219281eeb5fa823146dc88cb4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Settings, Keybindings, and Extensions for Positron\"\ndate: \"2024-06-29\"\ndescription: |\n  My initial keybindings, settings, and extensions for Positron, Posit's new IDE built on \"Code - OSS\" (aka Visual Studio Code aka VS Code).\ncategories: [r-pkg, bskyr]\nimage: \"positron-view.png\"\nimage-alt: \"The view from inside Positron, full of purples.\"\neditor: \n  markdown: \n    wrap: sentence\nknitr:\n  opts_chunk: \n    echo: false\n---\n\n\n\n\nThis post introduces my initial set of settings, keybindings, and extensions for [Positron](https://github.com/posit-dev/positron).\nPositron is Posit's data science oriented IDE built on [Code - OSS](https://github.com/microsoft/vscode).\nThe open beta just began this week (at the time of writing).\nMost of my life is spent in RStudio, but I've been trying to use Positron to get a sense of it.\n\nBelow, I list out the settings, keybinds, and some details on extensions that I like so far. \nI plan to update this over time or make a gist, but the simplest thing to start was just make a short blog post.\n\nFor clarity, the exploration to get here is not random.\nI use RStudio as main my IDE, so I started with their keybindings [discussed here](https://github.com/posit-dev/positron/wiki/Keyboard-Shortcuts#rstudio-keymap).\nI then ported over random settings from VS Code, which I was using for [typst](https://github.com/typst/typst) and markdown editing, following the untimely demise of [Atom](https://github.blog/2022-06-08-sunsetting-atom/).\nThe rest of the settings are things I've found when Googling random bits of information about VS Code and how to fix things I disliked.\n\n# Settings\n\nThese are the settings I have in `settings.json` for Positron.\n\n```json\n{\n    // make default keybinds rstudio-like\n    \"rstudio.keymap.enable\": true,\n\n    // font settings\n    \"editor.fontFamily\": \"Fira Code\",\n    \"editor.fontLigatures\": true,\n\n    // color theme settings\n    \"workbench.colorTheme\": \"Shades of Purple\",\n    \"workbench.colorCustomizations\": {\n        \"[Shades of Purple]\": {\n            \"tab.inactiveBackground\": \"#222244\",\n            \"tab.inactiveForeground\": \"#FFFFFF\",\n            \"tab.activeBackground\": \"#2D2B55\",\n            \"tab.activeForeground\": \"#A599E9\",\n            \"editorGroupHeader.tabsBackground\": \"#222244\"\n        }\n    },\n\n    // ctrl+n opens a new file in R by default\n    \"files.defaultLanguage\": \"r\",\n\n    // add vertical line at 80 characters\n    \"editor.rulers\": [\n        80\n    ],\n\n    // handle newline saving adapted from\n    // https://rfdonnelly.github.io/posts/sane-vscode-whitespace-settings/\n    \"files.insertFinalNewline\": true,\n    \"editor.renderFinalNewline\": \"dimmed\",\n    \"files.trimFinalNewlines\": true,\n    \"files.trimTrailingWhitespace\": true,\n\n    // also render trailing whitespace, since it'll get trimmed\n    \"editor.renderWhitespace\": \"trailing\",\n\n    // better pasting\n    \"editor.formatOnPaste\": true,\n\n    // prettier folders since vscode is ugly by default\n    \"workbench.iconTheme\": \"material-icon-theme\",\n\n    // adds lines for the current bracket you're in\n    \"editor.guides.bracketPairs\": \"active\",\n\n    // pretty cursor\n    \"editor.cursorBlinking\": \"phase\",\n    \"editor.cursorStyle\": \"line\",\n\n    // otherwise opening two files closes the first ???\n    \"workbench.editor.enablePreview\": false,\n\n    // adds more lines to the file tab\n    \"workbench.tree.renderIndentGuides\": \"always\",\n\n    // make the terminal use powershell by default\n    \"terminal.integrated.defaultProfile.windows\": \"PowerShell\",\n\n    // settings editor json with \"ctrl+,\"\n    \"workbench.settings.editor\": \"json\",\n\n    // Extension-specific settings\n    // otherwise functions often show errors if initial indent is not even\n    \"indentRainbow.ignoreErrorLanguages\": [\n        \"r\"\n    ],\n\n    // error delay so errorLens is less noisy\n    \"errorLens.delay\": 750,\n}\n\n```\n\n# Keybindings\n\nThese are relatively simple, as I prefer to run `devtools::load_all()` in the terminal than to do it on a keybinding.\nIn general, I dislike too many keybindings when the alternative is a short bit of typing.\nThe upstream default settings from OSS Code are already *extremely* greedy, so I suspect most of my keybindings over time will be focused on removing defaults.\n\nThe first keybinding is for inserting an R code chunk in a Quarto document.\nTo interrupt a running R process, I use `escape` in the console.\n(The button is called `escape` for a reason after all.)\nThe third keybinding is to fix line indention, since I obsessively click (`ctrl+a` then `ctrl+i`).\nThe last keybinding just undoes a default keybinding because Positron opens random files if you already have the search open.\n\n```json\n[\n    {\n        \"key\": \"ctrl+shift+r\",\n        \"command\": \"editor.action.insertSnippet\",\n        \"when\": \"editorLangId == 'quarto'\",\n        \"args\": {\n            \"snippet\": \"```{r}\\n$0\\n```\"\n        },\n    },\n    {\n        \"key\": \"escape\",\n        \"command\" : \"workbench.action.languageRuntime.interrupt\",\n        \"when\": \"positronConsoleFocused\"\n    },\n    {\n        \"key\": \"ctrl+i\",\n        \"command\": \"editor.action.reindentlines\"\n    },\n    { // fixes the double ctrl+shift+p opening stuff issue\n        \"key\": \"ctrl+shift+p\",\n        \"command\": \"-workbench.action.quickOpenNavigatePreviousInFilePicker\",\n        \"when\": \"inFilesPicker && inQuickOpen\"\n    },\n]\n```\n\n# Extensions\n\nLast, but not least, are the extensions I installed.\nExtensions for Positron are installed from [Open VSX](https://open-vsx.org/).\nThere are a bunch of extensions installed by default, which I've kept, excepted disabling python.\nIt's nice that Positron let's you use a St.-Patrick-approved variant without the snakes.\nAs for the rest of the extensions, below I list the most important part, the color theme, first and then list the rest in alphabetical order.\n\n### [Shades of Purple](https://open-vsx.org/extension/ahmadawais/shades-of-purple)\n\n![The view from inside Positron](positron-view.png)\n\nI like Shades of Purple as a starting place for the theme.\nIt reminds me of Cobalt in RStudio, which is my go-to theme on Windows.\nI switch between mac and Windows frequently when working on packages, so I need very different themes to keep everything straight.\n\nThat said, the Shades of Purple has the tab colors inverted, where it highlights inactive tabs and not the active tab, but it's easy to fix this with the settings from above (and repeated here).\nIt probably doesn't matter if you have many tabs open, but with just two it's confusing.\n\n```json\n    \"workbench.colorTheme\": \"Shades of Purple\",\n    \"workbench.colorCustomizations\": {\n        \"[Shades of Purple]\": {\n            \"tab.inactiveBackground\": \"#222244\",\n            \"tab.inactiveForeground\": \"#FFFFFF\",\n            \"tab.activeBackground\": \"#2D2B55\",\n            \"tab.activeForeground\": \"#A599E9\",\n            \"editorGroupHeader.tabsBackground\": \"#222244\"\n        }\n    }\n```\n\n### [Better Comments](https://open-vsx.org/extension/aaron-bond/better-comments)\n\nThis adds some highlighting to comments, including highlighting in roxygen.\n\n### [Error Lens](https://open-vsx.org/extension/usernamehw/errorlens)\n\nThis moves the error messages from the bottom of the screen to the line where the error is.\n\n### [Indent Rainbow](https://open-vsx.org/extension/oderwat/indent-rainbow)\n\nThis adds colors for every two spaces for indents.\n\n### [Material Icon Theme](https://open-vsx.org/extension/PKief/material-icon-theme)\n\nThis adds nice icons to the folders and files in the file explorer, terminal, tabs, etc.\n\n### [Quarto](https://open-vsx.org/extension/quarto/quarto)\n\nI was surprised that this wasn't already bundled with Positron.\nI suspect that will change, but for now, I've installed it.\n\nThis extension adds full support for Quarto documents.\nThe Quarto extension actually highlights my biggest disappointment with Positron so far: it's very messy.\nRStudio was clearly doing a bunch of behind-the-scenes handling for rendering documents.\nWhen I run things in Positron, a mess of files are created in the working directory.\nThat seems pretty antisocial, but since it's not included by default, I suspect this is just one of the more \"beta\"-y features of the open beta.\n\n### [Rainbow CSV](https://open-vsx.org/extension/mechatroner/rainbow-csv)\n\nThis part is really cool: when you open a csv it adds a bunch of color to distinguish columns.\nIt even adds a box for when a column is hex color codes.\n\nAn example of the color coding from my packages csv that I use on my website is:\n\n![Rainbow CSV](rainbow-csv.png)\n\n### [Typst Companion](https://open-vsx.org/extension/CalebFiggers/typst-companion)\n\nWe head now into the Typst extensions.\nThese are all extensions I was using on VS Code and now can use in Positron.\nThe companion adds some keyboard shortcuts for editing in Typst.\n\n### [Typst LSP](https://open-vsx.org/extension/nvarner/typst-lsp)\n\nThis is a nice general purpose Typst extension.\nI have no real complaints, it seems to do the job well.\n\n### [Typst Preview](https://open-vsx.org/extension/mgt19937/typst-preview)\n\nThis previewer adds a near immediate preview of the document.\nTypst's big selling point to me is its speed with roughly 90% of LaTeX's customizability.\nThe previewer helps get you all of the speed locally, without using something like [typst.app](https://typst.app/).\n\n### [vscode-pdf](https://open-vsx.org/extension/tomoki1207/pdf)\n\nThis gets you a nice PDF viewer, which is great for tasks like commenting on papers while reading it.\nThis works great with a split screen.\n\n### [YAML](https://open-vsx.org/extension/redhat/vscode-yaml)\n\nI use YAML a bunch for Quarto configs, so this is helpful.\nIt's probably not necessary, but it's nice to have.\n\n\n## Extensions that I tried but wasn't convinced\n\n### Code Spell Checker\n\nThis looks really helpful, but was flagging hundreds of false positive words when doing package development. \nThere may be better settings for it, but there was way too much noise to be useful by default.\n\n### Spell Right\n\nSpell check is hard, but I couldn't get this extension to work at all.\nEverything resulted in a modal dialogue for an error, unfortunately.\nSimilar to the other spellchecker, this might just be designed for a different use case than I have.\n\n\n# Summary\n\n- I like Positron quite a bit.\n- Because it's based on OSS Code, it comes with VS Code's biggest issue: greedy keybindings.\n- The Quarto extension is a bit messy, but I suspect that will improve over time.\n- Everything else seems nice and the ability to customize so much is pretty neat.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}